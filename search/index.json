[{"content":"前言    邮件类型 特点      简单邮件 不能解析html语言，发送的为原本文本，不能加附件发送    复杂邮件 可以选择是否解析html语言，能加附件发送     依赖 邮件配置的\n手机短信的\n目录  1.发送邮件  1.1申请邮件授权码（这里是qq的） 1.2applicaton配置 1.3简单邮件发送 1.4复杂邮件发送 1.5发送邮件自定义模板  1.5.1使用模板的注意事项     2.手机验证码  2.1初始化 2.2配置 2.3设置http超时与id和Secret 2.4固定部分 2.5填发送对象手机号短信签名与短信模板 2.6用json形的字符串改短信模板中的参数    发送邮件 申请邮件授权码（这里是qq的）\napplicaton配置\n1.qq邮箱的配置\n2.163邮箱的配置\n其它邮箱的配置只要改对应的host那些就行\n简单邮件发送\n@Autowired JavaMailSenderImpl MailSender; @Test void contextLoads() { //建简单邮件对象  SimpleMailMessage MailMessage = new SimpleMailMessage(); //邮件设置  MailMessage.setSubject(\u0026#34;我是邮件标题-来了\u0026#34;); //标题  MailMessage.setText(\u0026#34;我是邮件内容-来了\u0026#34;); //邮件内容  MailMessage.setTo(\u0026#34;接受者qq@qq.com\u0026#34;); //发给谁  MailMessage.setFrom(\u0026#34;发送者qq@qq.com\u0026#34;);//谁发的  MailSender.send(MailMessage); } 复杂邮件发送\n1.这部分用的是模板可看发送邮件自定义模板\n@Autowired JavaMailSenderImpl MailSender; //thymeleaf解析器  @Autowired private TemplateEngine templateEngine; @Test void SendMail() throws MessagingException { //是可自定义对象  Message message =new Message(\u0026#34;ai\u0026#34;,11); //创建邮件正文  Context context = new Context(); //设置邮件模板内可变参数（message是一个对象）  context.setVariable(\u0026#34;message\u0026#34;, message); //替换字符串  String content = \u0026#34;http\u0026#34;; String replace = content.replace(\u0026#34;http\u0026#34;,\u0026#34;https://xxx/1.png\u0026#34;); //放入context  context.setVariable(\u0026#34;image\u0026#34;, replace); context.setVariable(\u0026#34;sendTime\u0026#34;, new Date()); //用于解析模板并利用当前response对象的writer把模板输出到浏览器(返回值是html文件包括变量的)  //用带参数的context改变a.html（用thymeleaf语法）返回的是改变了的html  String emailContent = templateEngine.process(\u0026#34;a\u0026#34;, context); 2.用MailSender.createMimeMessage()，创建复杂邮件对象\u0026ndash;与简单邮件不同处\n//建复杂邮件对象  MimeMessage mimeMessage =MailSender.createMimeMessage(); //true表示需要创建一个multipart message  MimeMessageHelper helpr=new MimeMessageHelper(mimeMessage,true); //邮件设置  helpr.setSubject(\u0026#34;我是邮件标题-来了\u0026#34;); 3.这里可以选是否解析html代码\nhelpr.setText(emailContent,true); //设置其为会解析html  helpr.setTo(\u0026#34;接受者qq@qq.com\u0026#34;); //发给谁  helpr.setFrom(\u0026#34;发送者qq@qq.com\u0026#34;);//谁发的  //上传文件  helpr.addAttachment(\u0026#34;1.png\u0026#34;,new File(\u0026#34;C:\\\\Users\\\\12113\\\\Desktop\\\\1.png\u0026#34;)); MailSender.send(mimeMessage); } 发送邮件自定义模板\n1.先用thymeleaf的Context容器放入参数\n@Autowired JavaMailSenderImpl MailSender; //thymeleaf解析器  @Autowired private TemplateEngine templateEngine; @Test void SendMail() throws MessagingException { //是可自定义对象  Message message =new Message(\u0026#34;ai\u0026#34;,11); //创建邮件正文  Context context = new Context(); //设置邮件模板内可变参数（message是一个对象）  context.setVariable(\u0026#34;message\u0026#34;, message); //替换字符串  String content = \u0026#34;http\u0026#34;; String replace = content.replace(\u0026#34;http\u0026#34;,\u0026#34;https://xxx/6.png\u0026#34;); //放入context  context.setVariable(\u0026#34;image\u0026#34;, replace); context.setVariable(\u0026#34;sendTime\u0026#34;, new Date()); 1.在将Context放入TemplateEngine引擎里，这里的返回值是接收了参数的a.html的字符串\n//用于解析模板并利用当前response对象的writer把模板输出到浏览器(返回值是html文件包括变量的)  //用带参数的context改变a.html（用thymeleaf语法）返回的是改变了的html  String emailContent = templateEngine.process(\u0026#34;a\u0026#34;, context); 注意：这里要个a.html在templates有才能访问到\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;zh\u0026#34; xmlns:th=\u0026#34;http://www.thymeleaf.org\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Title\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h\u0026gt;你好，[[${message.name}]],您今年[[${message.age}]]\u0026lt;/h\u0026gt; \u0026lt;img class=\u0026#34;avatar1\u0026#34; width=\u0026#34;80\u0026#34; height=\u0026#34;80\u0026#34; th:src=\u0026#34;@{${image}}\u0026#34; \u0026gt; 现在时间：\u0026lt;th th:text=\u0026#34;${sendTime}\u0026#34;\u0026gt;\u0026lt;/th\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 使用模板的注意事项 1.在类里自动注入TemplateEngine，这个类也应是自动注入的（如下）\n这个是config层的\n这个是controller层的\n手机验证码 初始化\n1.先去阿里云申请（要登入），点这里跳转\n2.点击\n3.创建并记下AccesKey ID和AccessKeySecret\n4.在XX管理那里，添加签名和添加模板，记住签名与模板名称\n配置\n1.需要用到的application.yml有这4个\n#手机短信相关配置 sms: accessKeyId: LTAI4Fku38EbzFCDdL9Sy6RD accessKeySecret: XXXXXXXXXXXXXXXX signName: X博客 # 签名名称 verifyCodeTemplate: SMS_183195163 # 模板名称 设置http超时与id和Secret\n1.System.setProperty的这两个参数在第一次连接时设置，并且会被缓存，在程序不关的情况下，再次访问，还是以第一次的结果为准\n//产品名称:云通信短信API产品,开发者无需替换  static final String product = \u0026#34;Dysmsapi\u0026#34;; //产品域名,开发者无需替换  static final String domain = \u0026#34;dysmsapi.aliyuncs.com\u0026#34;; @Test void sms()throws ClientException{ //可自助调整超时时间-设置http的超时  System.setProperty(\u0026#34;sun.net.client.defaultConnectTimeout\u0026#34;, \u0026#34;10000\u0026#34;); System.setProperty(\u0026#34;sun.net.client.defaultReadTimeout\u0026#34;, \u0026#34;10000\u0026#34;); //初始化acsClient,暂不支持region化  //keyId和keySecret  IClientProfile profile = DefaultProfile.getProfile(\u0026#34;cn-hangzhou\u0026#34;, \u0026#34;你自己的AccessKeyId\u0026#34;, \u0026#34;你自己的AccessKeySecret\u0026#34;); 固定部分\n//product = \u0026#34;Dysmsapi\u0026#34;,domain = \u0026#34;dysmsapi.aliyuncs.com\u0026#34;  DefaultProfile.addEndpoint(\u0026#34;cn-hangzhou\u0026#34;, \u0026#34;cn-hangzhou\u0026#34;, product, domain); //放入IClientProfile  IAcsClient acsClient = new DefaultAcsClient(profile); 填发送对象手机号短信签名与短信模板\n//组装请求对象-具体描述见控制台-文档部分内容  SendSmsRequest request = new SendSmsRequest(); request.setMethod(MethodType.POST); //必填:待发送手机号  request.setPhoneNumbers(\u0026#34;发送对象手机号\u0026#34;); //必填:短信签名-在application  request.setSignName(\u0026#34;自己的短信签名\u0026#34;); //必填:短信模板-在application  request.setTemplateCode(\u0026#34;自己的短信模板\u0026#34;); 用json形的字符串改短信模板中的参数\n//可选:模板中的变量替换JSON串,如模板内容为\u0026#34;亲爱的${name},您的验证码为:${code}\u0026#34;时,此处的值为  //这里的模板是{\u0026#34;code\u0026#34;:\u0026#34;2333\u0026#34;} 是json写法会加载到自定义里的${code}  //亲爱的${name},您的验证码为2333  //todo ：手机模板写法  request.setTemplateParam(\u0026#34;{\\\u0026#34;code\\\u0026#34;:\\\u0026#34;\u0026#34; + \u0026#34;2333\u0026#34; + \u0026#34;\\\u0026#34;}\u0026#34;); //选填-上行短信扩展码(无特殊需求用户请忽略此字段)  //request.setSmsUpExtendCode(\u0026#34;90997\u0026#34;);  //可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者  request.setOutId(\u0026#34;123456\u0026#34;); //hint 此处可能会抛出异常，注意catch(成功返回值可取sendSmsResponse.getCode()短信状态，sendSmsResponse.getMessage()短信消息)  SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request); }  .arrow{ border: 9px solid transparent; border-bottom-color: #3DA0DB; width: 0px; height: 0px; top:0px} .stick{ width: 8px; height: 14px; border-radius: 1px; background-color: #3DA0DB; top:15px;} #back_top div{ position: absolute; margin: auto; right: 0px; left: 0px;} #back_top{ background-color: #dddddd; height: 38px; width: 38px; border-radius: 3px; display: block; cursor: pointer; position: fixed; right: 50px; bottom: 100px; display: none;}        $(function(){ $(window).scroll(function(){ //只要窗口滚动,就触发下面代码 var scrollt = document.documentElement.scrollTop + document.body.scrollTop; //获取滚动后的高度 if( scrollt 200 ){ //判断滚动后高度超过200px,就显示 $(\"#back_top\").fadeIn(400); //淡入 }else{ $(\"#back_top\").stop().fadeOut(400); //如果返回或者没有超过,就淡出.必须加上stop()停止之前动画,否则会出现闪动 }}); $(\"#back_top\").click(function(){ //当点击标签的时候,使用animate在200毫秒的时间内,滚到顶部 $(\"html,body\").animate({scrollTop:\"0px\"},200); }); });   var a_idx = 0; jQuery(document).ready(function($) { $(\"body\").click(function(e) { var a = new Array(\"❤哎嘿❤\",\"❤哦豁❤\",\"❤呀~❤\",\"❤嗯？❤\",\"❤点击❤\",\"❤芜湖❤\",\"❤滴❤\",\"❤别点啦❤\",\"❤没东西啦❤\",\"❤瞎点~❤\",\"❤我在哟❤\",\"❤好看不❤\"); var $i = $(\"\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 999999999999999999999999999999999999999999999999999999999999999999999, \"top\": y - 20, \"left\": x, \"position\": \"absolute\", \"font-weight\": \"bold\", \"color\": \"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\" }); $(\"body\").append($i); $i.animate({ \"top\": y - 180, \"opacity\": 0 }, 1500, function() { $i.remove(); }); }); });  body { cursor:url('sb.png'), pointer}\t//在body内的元素会变   ","date":"2021-08-16T16:16:26+08:00","image":"https://uggmycar.github.io/p/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/a_hu700275244aab45103b63a9bdebf71928_5794243_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/","title":"身份验证"},{"content":"前言 模拟浏览器发请求有两种\n   第几种 原理 优点     第一种 HttpURLConnection 配合 流处理 拿状态码等头文件容易   第二种 HttpGet（模拟发送） 配合 CloseableHttpResponse（处理返回值） 解析字符串数据自动拿字符集（接口拿json用它）    目录  1.第一种代码  1.1初始化 1.2模拟浏览器   2.第二种代码  2.1初始化 2.2将url绑定到HttpGet里 2.3向浏览器请求 2.4拿到请求返回来的结果 2.5对请求返回的请求体解析 2.6结尾   3.json解析器  第一种代码 初始化\nInputStream inputStream=null; //这个网站返回的是gbk字符集  String urladdress=\u0026#34;http://whois.pconline.com.cn/ipJson.jsp?ip=\u0026#34;+\u0026#34;117.178.141.106\u0026#34;+\u0026#34;\u0026amp;json=true\u0026#34;; String jsonStr = \u0026#34;\u0026#34;; URL url; 模拟浏览器\n1.用url创建HttpURLConnection对象\n2.HttpURLConnection设置头文件属性以及连接属性\n3.httpConn.setDoInput(true)设置是浏览器输出数据\ntry {// 获取url连接对象  url = new URL(urladdress); //根据url创建http对象  HttpURLConnection httpConn = (HttpURLConnection) url.openConnection(); // 设置连接属性  httpConn.setConnectTimeout(3000); httpConn.setDoInput(true); httpConn.setRequestMethod(\u0026#34;GET\u0026#34;); //設置发出与接收的字符集 // httpConn.setRequestProperty(\u0026#34;Charsert\u0026#34;, \u0026#34;UTF-8\u0026#34;); 4.HttpURLConnection得到返回值（状态码和头文件属性和返回数据）\n// 获取相应状态码  int respCode = httpConn.getResponseCode(); httpConn.getContentType(); //返回内容字符集utf-8  httpConn.getContentEncoding();//返回编码头字符集gzip  // 如果成功发200状态码  if (respCode == 200) { inputStream=httpConn.getInputStream(); 4.对流解析这里是接口返回json数据\n// ByteArrayOutputStream相当于内存输出流  ByteArrayOutputStream out = new ByteArrayOutputStream(); byte[] buffer = new byte[1024]; int len = 0; // 将输入流转移到内存输出流中  while ((len = inputStream.read(buffer, 0, buffer.length)) != -1) { out.write(buffer, 0, len); } // 将内存流转换为字符串\u0026#34;GB2312\u0026#34;是搜狐默认的,而且HttpURLConnection接收数据的时候 字符集默认的是GBK  jsonStr=out.toString(\u0026#34;GB2312\u0026#34;); // new String(out.toByteArray(),\u0026#34;GB2312\u0026#34;);  } } catch (MalformedURLException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } 第二种代码 初始化\nCloseableHttpClient httpClient; String body = null,status = null; // 1 HttpClients是java包里的，用它创建HttpClinet，相当于打开浏览器  httpClient = HttpClients.createDefault(); //url太平洋ip接口  String url = \u0026#34;http://whois.pconline.com.cn/ipJson.jsp?ip=\u0026#34;+\u0026#34;117.178.141.106\u0026#34;+\u0026#34;\u0026amp;json=true\u0026#34;; 将url绑定到HttpGet里\n1.1当无参数的绑定时\nHttpGet httpGet = new HttpGet(url); 1.2当有外界传来的map参数的绑定时\nmap.put(\u0026ldquo;ip\u0026rdquo;,ip);\nmap.put(\u0026ldquo;json\u0026rdquo;,\u0026ldquo;true\u0026rdquo;);\n这里的String url = \u0026ldquo;http://whois.pconline.com.cn/ipJson.jsp\" \n// 声明URIBuilder(动态加变量用)  URIBuilder uriBuilder = new URIBuilder(url); //参数放map里  Map\u0026lt;String, Object\u0026gt; map = null; // 判断参数map是否为非空  if (map != null) { // 遍历参数  for (Map.Entry\u0026lt;String, Object\u0026gt; entry : map.entrySet()) { // 给url上设置参数  uriBuilder.setParameter(entry.getKey(), entry.getValue().toString()); } } // 2 创建httpGet对象，相当于设置url请求地址（带参数的）  HttpGet httpGet = new HttpGet(uriBuilder.build()); 向浏览器请求\n2.CloseableHttpClient绑定HttpGet并向浏览器请求execute\n// 3 使用HttpClient执行httpGet，相当于按回车，发起请求  CloseableHttpResponse response = null; try { response = httpClient.execute(httpGet); } catch (IOException e) { logger.info(e+\u0026#34;浏览器请求错误\u0026#34;); } 拿到请求返回来的结果\n3.这里可以拿返回来的头文件\neg：返回来的字符集是什么\n注意这里是还要用正则表达式解析数据（没写）\n// todo:拿状态码（用正则）  Header[] headers= response.getHeaders(\u0026#34;content-type\u0026#34;);//拿头文件字符集（包状态码）  for (Header header : headers) { header.getName(); //拿key ：content-type  header.getValue(); //拿值text/html; charset=GBK  logger.info(header.toString()); //拿全部Content-Type: text/html; charset=GBK  } 对请求返回的请求体解析\n注意CloseableHttpResponse.getEntity()只能用一次\n3.1这一部分是对返回的结果是字符串形式的写法\n//对返回数据解析  try { if (response.getEntity() != null) { //拿状态码  status= String.valueOf(response.getStatusLine().getStatusCode()); //请求体CloseableHttpResponse.getEntity()不能调用多次，只能调用获取一次 //这种是自动获取发的字符集在解码成字符串，如果没有获取到，在以后面的字符集解码（UTF-8与gbk都行）  body=EntityUtils.toString(response.getEntity(),\u0026#34;gbk\u0026#34;);//body是String  3.2这一部分是对返回的结果是其它文件，用2进制方式（没写）或者用流读取文件\nInputToString inputToString = new InputToString();//工具类  if (response.getEntity() != null) { //拿状态码  status= String.valueOf(response.getStatusLine().getStatusCode()); //以字节方式读传来的数据  // byte[] bytes = EntityUtils.toByteArray(response.getEntity()); //这种方式是以流方式拿数据，所以用gbk解码，因为发来的数据是gbk的  InputStream in = response.getEntity().getContent(); body=inputToString.InToString(in); 工具类代码\npackage com.xiao.demo.util; import java.io.ByteArrayOutputStream; import java.io.IOException; import java.io.InputStream; public class InputToString{ public String InToString(InputStream inputStream) throws IOException { String jsonStr; // ByteArrayOutputStream相当于内存输出流  ByteArrayOutputStream out = new ByteArrayOutputStream(); byte[] buffer = new byte[1024]; int len = 0; // 将输入流转移到内存输出流中  while ((len = inputStream.read(buffer, 0, buffer.length)) != -1) { out.write(buffer, 0, len); } // 将内存流转换为字符串\u0026#34;GB2312\u0026#34;是搜狐默认的,而且HttpURLConnection接收数据的时候 字符集默认的是GBK  jsonStr = out.toString(\u0026#34;GB2312\u0026#34;); out.close(); inputStream.close(); return jsonStr; } } 结尾\n} else { //状态码  status= String.valueOf(response.getStatusLine().getStatusCode()); } } catch (IOException e) { e.printStackTrace(); } logger.info(\u0026#34;请求体：\u0026#34;+body+\u0026#34;--状态码：\u0026#34;+status); json解析器\n//字符串是这样的{\u0026#34;地址\u0026#34;:\u0026#34;内容\u0026#34;} JSONObject jsonObject = JSONObject.parseObject(String类型); //取出地址对应内容\t String pro = jsonObject.getString(\u0026#34;地址\u0026#34;);  .arrow{ border: 9px solid transparent; border-bottom-color: #3DA0DB; width: 0px; height: 0px; top:0px} .stick{ width: 8px; height: 14px; border-radius: 1px; background-color: #3DA0DB; top:15px;} #back_top div{ position: absolute; margin: auto; right: 0px; left: 0px;} #back_top{ background-color: #dddddd; height: 38px; width: 38px; border-radius: 3px; display: block; cursor: pointer; position: fixed; right: 50px; bottom: 100px; display: none;}        $(function(){ $(window).scroll(function(){ //只要窗口滚动,就触发下面代码 var scrollt = document.documentElement.scrollTop + document.body.scrollTop; //获取滚动后的高度 if( scrollt 200 ){ //判断滚动后高度超过200px,就显示 $(\"#back_top\").fadeIn(400); //淡入 }else{ $(\"#back_top\").stop().fadeOut(400); //如果返回或者没有超过,就淡出.必须加上stop()停止之前动画,否则会出现闪动 }}); $(\"#back_top\").click(function(){ //当点击标签的时候,使用animate在200毫秒的时间内,滚到顶部 $(\"html,body\").animate({scrollTop:\"0px\"},200); }); });  ","date":"2021-08-13T09:04:24+08:00","image":"https://uggmycar.github.io/p/%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%91%E8%AF%B7%E6%B1%82/1_hu06eb82f7409391596f1430388ea03ec8_291484_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%91%E8%AF%B7%E6%B1%82/","title":"模拟浏览器发请求"},{"content":"引入第三方登入  1：在第三方应用处申请Client ID和Client secrets 2：回调函数拿code\n3：根据code拿令牌\n4：根据令牌拿用户数据\n git登入 在git申请 1.在git的Settings的Developer settings里创建一个应用申请\n2.网站用OAuth Apps\n3.注意这里的主页地址是要已经在网上发布的地址（如果是本地测试可以用GitHub Apps一样填法）\n4.申请好后，在这里可以看自己的Client ID和Client secrets\nSpringBoot里使用 1.先要向git发起请求，git收到请求发送code到指定的回调函数里\n2.然后带code发起get请求，向git拿令牌\n3.拿令牌向git发起get请求（这里最新是将token令牌放到头文件【Authorization:token 令牌】里发送，有空格这里），拿用户信息\n控制层代码\n@Controller public class GitController { @GetMapping(\u0026#34;/\u0026#34;) public String index(){ return \u0026#34;index\u0026#34;; } @GetMapping(\u0026#34;/login\u0026#34;) public String login(Model model){ model.addAttribute(\u0026#34;success\u0026#34;,\u0026#34;成功登入\u0026#34;); return \u0026#34;login\u0026#34;; } @GetMapping(\u0026#34;/gitlogin\u0026#34;) public String Gitlogin(HttpSession session){ //随机uuid,用于第三方应用防止CSRF攻击  String uuid= UUID.randomUUID().toString().replaceAll(\u0026#34;-\u0026#34;,\u0026#34;\u0026#34;); session.setAttribute(\u0026#34;state\u0026#34;,uuid); //向git请求code  String gitlogin=\u0026#34;https://github.com/login/oauth/authorize?\u0026#34;;\t//固定的  String client_id=\u0026#34;client_id=\u0026#34;+\u0026#34;填自己的Client ID\u0026#34;;\t//自己修改  String callback=\u0026#34;填自己的回调地址\u0026#34;;\t//自己修改  String redirect=\u0026#34;\u0026amp;redirect_uri=\u0026#34;+ URLEncoder.encode(callback);\t//将回调地址转换怕有中文  String url=gitlogin+client_id+redirect+\u0026#34;\u0026amp;state=\u0026#34;+uuid; return \u0026#34;redirect:\u0026#34; + url;\t//服务器发请求  } @RequestMapping (\u0026#34;/callback\u0026#34;) public String callback(String code, //服务器带个code  String state, Model model, HttpServletResponse response ) throws Exception { String client_id=\u0026#34;填自己的Client ID\u0026#34;;\t//自己修改  String key=\u0026#34;填自己的Client secrets\u0026#34;; //自己修改  String callback=\u0026#34;http://127.0.0.1:8080/callback\u0026#34;;\t//自己修改（填自己的回调地址）  String codeurl=\u0026#34;https://github.com/login/oauth/access_token?client_id=\u0026#34;;\t//固定的  String token; String userinfo_url; Map\u0026lt;String, String\u0026gt; responseMap; String responseStr; String setcode=codeurl+client_id+\u0026#34;\u0026amp;client_secret=\u0026#34;+key+\u0026#34;\u0026amp;code=CODE\u0026amp;redirect_uri=\u0026#34;+callback+\u0026#34;\u0026#34;; if(!StringUtils.isEmpty(code)\u0026amp;\u0026amp;!StringUtils.isEmpty(state)) { //将传来的code设置上  String token_url = setcode.replace(\u0026#34;CODE\u0026#34;, code);\t//设置带code的url去请求令牌token  //去git那请求令牌  //拿code去请求令牌  responseStr= HttpClientUtils.doGet(token_url); //解析拿到的代码取出token令牌  Map\u0026lt;String, String\u0026gt; map = new HashMap\u0026lt;\u0026gt;(); // 以\u0026amp;来解析字符串  String[] result = responseStr.split(\u0026#34;\\\\\u0026amp;\u0026#34;); for (String str : result) { // 以=来解析字符串  String[] split = str.split(\u0026#34;=\u0026#34;); // 将字符串存入map中  if (split.length == 1) { map.put(split[0], null); } else { map.put(split[0], split[1]); } } token = map.get(\u0026#34;access_token\u0026#34;);\t//拿到token令牌  //根据token发送请求获取登录人的信息 ，通过令牌去获得用户信息  userinfo_url = \u0026#34;https://api.github.com/user\u0026#34;;\t//固定url  //根据令牌向git发起请求拿其用户信息（用HttpClientUtils.doGet2处理后面有）  responseStr= HttpClientUtils.doGet2(userinfo_url,token);//json存储的用户信息  //用户信息转为map（含有用户信息）  responseMap = HttpClientUtils.getMapByJson(responseStr); System.out.println(responseMap.get(\u0026#34;node_id\u0026#34;));//node_id,用来唯一标识用户 /*** //这些通过responseMap.get能取到git其它信息 node_id\t用来唯一标识用户 avatar_url\tgithub头像URL created_at\t最后更新github时间 login\tgithub名 html_url\t用户首页 node_id\t账号唯一标识 public_repos\t公有仓库数量 login\t账号名 subscriptions_url\t仓库详细信息 updated_at\t最后更新github时间 id\tgithub账号id received_events_url\t操作详细信息url **/ received_events_url //成功就显示  return \u0026#34;redirect:/login\u0026#34;; } //失败回首页  return \u0026#34;redirect:/index\u0026#34;; } } HttpClientUtils.doGet2和getMapByJson代码\npackage com.xiao.demo.util; import com.alibaba.fastjson.JSONObject; import org.apache.http.HttpEntity; import org.apache.http.client.methods.CloseableHttpResponse; import org.apache.http.client.methods.HttpGet; import org.apache.http.impl.client.CloseableHttpClient; import org.apache.http.impl.client.HttpClients; import org.apache.http.util.EntityUtils; import java.util.HashMap; import java.util.Map; /** * @author : xsh * @create : 2020-03-10 - 15:07 * @describe: 第三方登陆工具类 */ public class HttpClientUtils { /** * 发送get请求，利用java代码发送请求 * @param url * @return * @throws Exception */ /** * 发送get请求，利用java代码发送请求 * @param url * @return更新了只能将token放头文件里 * @throws Exception */ public static String doGet2(String url,String Token) throws Exception{ CloseableHttpClient httpclient = HttpClients.createDefault(); HttpGet httpGet = new HttpGet(url); httpGet.addHeader(\u0026#34;Authorization\u0026#34;,\u0026#34;token \u0026#34;+Token); // 发送了一个http请求  CloseableHttpResponse response = httpclient.execute(httpGet); // 如果响应200成功,解析响应结果  if(response.getStatusLine().getStatusCode()==200){ // 获取响应的内容  HttpEntity responseEntity = response.getEntity(); return EntityUtils.toString(responseEntity); } return null; } /** * 将字符串转换成map * @param responseEntity * @return */ public static Map\u0026lt;String,String\u0026gt; getMap(String responseEntity) { Map\u0026lt;String, String\u0026gt; map = new HashMap\u0026lt;\u0026gt;(); // 以\u0026amp;来解析字符串  String[] result = responseEntity.split(\u0026#34;\\\\\u0026amp;\u0026#34;); for (String str : result) { // 以=来解析字符串  String[] split = str.split(\u0026#34;=\u0026#34;); // 将字符串存入map中  if (split.length == 1) { map.put(split[0], null); } else { map.put(split[0], split[1]); } } return map; } /** * 通过json获得map * @param responseEntity * @return */ public static Map\u0026lt;String,String\u0026gt; getMapByJson(String responseEntity) { Map\u0026lt;String, String\u0026gt; map = new HashMap\u0026lt;\u0026gt;(); // 阿里巴巴fastjson 将json转换成map  JSONObject jsonObject = JSONObject.parseObject(responseEntity); for (Map.Entry\u0026lt;String, Object\u0026gt; entry : jsonObject.entrySet()) { String key = entry.getKey(); // 将obj转换成string  String value = String.valueOf(entry.getValue()) ; map.put(key, value); } return map; } } qq登入 在qq申请 在这个网站申请qq登入： https://connect.qq.com/index.html\n可参考这个 https://blog.csdn.net/qq_25615395/article/details/80251094\n完善资料后申请app ID和app key\n在springboot里使用 1.先要向qq发起请求，qq收到请求发送code到指定的回调函数里\n2.拿code向qq申请token\n3.拿到token向qq申请(申请时要填写自己上传的回调函数)对应用户的openid（多一步） 4.通过openid和token向qq拿用户信息 openid\u0026ndash;（用来唯一标识qq用户）\nqq控制层代码\n@Controller public class QQController { @GetMapping(\u0026#34;/qqlogin\u0026#34;) public String qqlogin(HttpSession session){ String backUrl = \u0026#34;自己申请的回调地址\u0026#34;;\t//QQ互联中的回调地址  String app_id=\u0026#34;\u0026amp;client_id=\u0026#34; + \u0026#34;自己的app_id\u0026#34;;\t//自己的appid  //用于第三方应用防止CSRF攻击\t String uuid = UUID.randomUUID().toString().replaceAll(\u0026#34;-\u0026#34;,\u0026#34;\u0026#34;); session.setAttribute(\u0026#34;state\u0026#34;,uuid); //Step1：获取Authorization Code  String url = \u0026#34;https://graph.qq.com/oauth2.0/authorize?response_type=code\u0026#34;+\t//固定的  app_id+\t//自己的appid +\u0026#34;\u0026amp;redirect_uri=\u0026#34; + URLEncoder.encode(backUrl) +\t//回调地址  \u0026#34;\u0026amp;state=\u0026#34; + uuid;\treturn \u0026#34;redirect:\u0026#34; + url; } /** * QQ回调 * @param request * @return */ @GetMapping(\u0026#34;/qq/callback\u0026#34;) public String qqcallback(HttpServletRequest request, HttpServletResponse response,String code//服务器带的code  ) throws Exception { HttpSession session = request.getSession(); String uuid = (String) session.getAttribute(\u0026#34;state\u0026#34;); String http=\u0026#34;http://xxxx.com\u0026#34;; //自己的网站（上传时填写的）  String APPID=\u0026#34;xxxxxxxxx\u0026#34;; //自己的appid  String APPKEY=\u0026#34;XXXXXXXX\u0026#34;; //自己的appkey  String backUrl = http + \u0026#34;/qq/callback\u0026#34;; //上传时填写的回调地址  String state = request.getParameter(\u0026#34;state\u0026#34;); //自定义验证码  if(uuid != null){ if(!uuid.equals(state)){ System.out.println(\u0026#34;QQ,state错误\u0026#34;); } } //Step2：通过Authorization Code获取Access Token令牌  String url = \u0026#34;https://graph.qq.com/oauth2.0/token?grant_type=authorization_code\u0026#34;+\t\u0026#34;\u0026amp;client_id=\u0026#34; + APPID + \u0026#34;\u0026amp;client_secret=\u0026#34; + APPKEY + \u0026#34;\u0026amp;code=\u0026#34; + code + \u0026#34;\u0026amp;redirect_uri=\u0026#34; + backUrl; //拿到token  String access_token = QQHttpClient.getAccessToken(url); //Step3: 获取回调后的 openid (用来唯一标识qq用户)值  url = \u0026#34;https://graph.qq.com/oauth2.0/me?access_token=\u0026#34; + access_token; //用令牌去拿用户id  String openid = QQHttpClient.getOpenID(url); //Step4：获取QQ用户信息  url = \u0026#34;https://graph.qq.com/user/get_user_info?access_token=\u0026#34; + access_token + \u0026#34;\u0026amp;oauth_consumer_key=\u0026#34;+APPID + \u0026#34;\u0026amp;openid=\u0026#34; + openid; //通过令牌拿到用户信息  JSONObject jsonObject = QQHttpClient.getUserInfo(url); //也可以放到Redis和mysql中  //openid,用来唯一标识qq用户  //removeNonBmpUnicode((String)jsonObject.get(\u0026#34;nickname\u0026#34;)); //QQ名，去除网名中的特殊表情  //(String)jsonObject.get(\u0026#34;figureurl_qq\u0026#34;); //QQ头像URL  //(String)jsonObject.get(\u0026#34;gender\u0026#34;); //性别  //(String)jsonObject.get(\u0026#34;year\u0026#34;); //年龄  //(String)jsonObject.get(\u0026#34;province\u0026#34;); //省  //(String)jsonObject.get(\u0026#34;city\u0026#34;); //城市  return \u0026#34;\u0026#34;;//成功就登入它  } /** * 处理掉QQ网名中的特殊表情 * @param str * @return */ public String removeNonBmpUnicode(String str) { if (str == null) { return null; } str = str.replaceAll(\u0026#34;[^\\\\u0000-\\\\uFFFF]\u0026#34;, \u0026#34;\u0026#34;); if (\u0026#34;\u0026#34;.equals(str)) { str = \u0026#34;(* _ *)\u0026#34;; } return str; } } QQHttpClient\npackage com.xiao.demo.util; import com.alibaba.fastjson.JSONObject; import org.apache.http.HttpEntity; import org.apache.http.HttpResponse; import org.apache.http.client.methods.HttpGet; import org.apache.http.impl.client.CloseableHttpClient; import org.apache.http.impl.client.HttpClients; import org.apache.http.util.EntityUtils; import java.io.IOException; /** * @author xsh * @create 2020-03-02 20:32 * QQ工具类（主要用于解析QQ返回的信息） */ public class QQHttpClient { private static JSONObject parseJSONP(String jsonp){ int startIndex = jsonp.indexOf(\u0026#34;(\u0026#34;); int endIndex = jsonp.lastIndexOf(\u0026#34;)\u0026#34;); String json = jsonp.substring(startIndex + 1,endIndex); return JSONObject.parseObject(json); } //qq返回信息：access_token=FE04************************CCE2\u0026amp;expires_in=7776000\u0026amp;refresh_token=88E4************************BE14  public static String getAccessToken(String url) throws IOException { CloseableHttpClient client = HttpClients.createDefault(); String token = null; HttpGet httpGet = new HttpGet(url); HttpResponse response = client.execute(httpGet); HttpEntity entity = response.getEntity(); if(entity != null){ String result = EntityUtils.toString(entity,\u0026#34;UTF-8\u0026#34;); if(result.indexOf(\u0026#34;access_token\u0026#34;) \u0026gt;= 0){ String[] array = result.split(\u0026#34;\u0026amp;\u0026#34;); for (String str : array){ if(str.indexOf(\u0026#34;access_token\u0026#34;) \u0026gt;= 0){ token = str.substring(str.indexOf(\u0026#34;=\u0026#34;) + 1); break; } } } } httpGet.releaseConnection(); return token; } //qq返回信息：callback( {\u0026#34;client_id\u0026#34;:\u0026#34;YOUR_APPID\u0026#34;,\u0026#34;openid\u0026#34;:\u0026#34;YOUR_OPENID\u0026#34;} ); 需要用到上面自己定义的解析方法parseJSONP  public static String getOpenID(String url) throws IOException { JSONObject jsonObject = null; CloseableHttpClient client = HttpClients.createDefault(); HttpGet httpGet = new HttpGet(url); HttpResponse response = client.execute(httpGet); HttpEntity entity = response.getEntity(); if(entity != null){ String result = EntityUtils.toString(entity,\u0026#34;UTF-8\u0026#34;); jsonObject = parseJSONP(result); } httpGet.releaseConnection(); if(jsonObject != null){ return jsonObject.getString(\u0026#34;openid\u0026#34;); }else { return null; } } //qq返回信息：{ \u0026#34;ret\u0026#34;:0, \u0026#34;msg\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;nickname\u0026#34;:\u0026#34;YOUR_NICK_NAME\u0026#34;, ... }，为JSON格式，直接使用JSONObject对象解析  public static JSONObject getUserInfo(String url) throws IOException { JSONObject jsonObject = null; CloseableHttpClient client = HttpClients.createDefault(); HttpGet httpGet = new HttpGet(url); HttpResponse response = client.execute(httpGet); HttpEntity entity = response.getEntity(); if(entity != null){ String result = EntityUtils.toString(entity,\u0026#34;UTF-8\u0026#34;); jsonObject = JSONObject.parseObject(result); } httpGet.releaseConnection(); return jsonObject; } }  var a_idx = 0; jQuery(document).ready(function($) { $(\"body\").click(function(e) { var a = new Array(\"❤哎嘿❤\",\"❤哦豁❤\",\"❤呀~❤\",\"❤嗯？❤\",\"❤点击❤\",\"❤芜湖❤\",\"❤滴❤\",\"❤别点啦❤\",\"❤没东西啦❤\",\"❤瞎点~❤\",\"❤我在哟❤\",\"❤好看不❤\"); var $i = $(\"\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 999999999999999999999999999999999999999999999999999999999999999999999, \"top\": y - 20, \"left\": x, \"position\": \"absolute\", \"font-weight\": \"bold\", \"color\": \"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\" }); $(\"body\").append($i); $i.animate({ \"top\": y - 180, \"opacity\": 0 }, 1500, function() { $i.remove(); }); }); });   .arrow{ border: 9px solid transparent; border-bottom-color: #3DA0DB; width: 0px; height: 0px; top:0px } .stick{ width: 8px; height: 14px; border-radius: 1px; background-color: #3DA0DB; top:15px; } #back_top div{ position: absolute; margin: auto; right: 0px; left: 0px; } #back_top{ background-color: #dddddd; height: 38px; width: 38px; border-radius: 3px; display: block; cursor: pointer; position: fixed; right: 50px; bottom: 100px; display: none; }        $(function(){ $(window).scroll(function(){ //只要窗口滚动,就触发下面代码 var scrollt = document.documentElement.scrollTop + document.body.scrollTop; //获取滚动后的高度 if( scrollt 200 ){ //判断滚动后高度超过200px,就显示 $(\"#back_top\").fadeIn(400); //淡入 }else{ $(\"#back_top\").stop().fadeOut(400); //如果返回或者没有超过,就淡出.必须加上stop()停止之前动画,否则会出现闪动 } }); $(\"#back_top\").click(function(){ //当点击标签的时候,使用animate在200毫秒的时间内,滚到顶部 $(\"html,body\").animate({scrollTop:\"0px\"},200); }); });  ","date":"2021-08-10T10:20:15+08:00","image":"https://uggmycar.github.io/p/%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/a_hu6dc535cdf07cfe4d3dfb180fa244a829_1023782_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/","title":"第三方登入"},{"content":"演示效果bug  这里有个bug当放右下角时会 质壁分离（误~。~）在waifu-tips.js有源码可以修改\n 注：博主绝对不是因为不会而不改的呢\n 注意：博客的md文件里必须顶格不然标签不生效\n原理：靠jq写入直接写到body里\n要自动配置看板娘语言要改waifu-tips.json文件里的配置\n 第一种看板娘第一种写法 \u0026lt;!-- waifu-tips.js 依赖 JQuery 库--\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 实现拖动效果，需引入 JQuery UI --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.12.1/jquery-ui.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 自定义加载(要用jq表达式) https://cdn.jsdelivr.net/gh/uggmycar/live2d@4.0/assets/autoload.js  --\u0026gt; \u0026lt;script src= \u0026#34;https://cdn.jsdelivr.net/gh/uggmycar/live2d@4.0/assets/autoload.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;    第一种看板娘的第二种写法（可在写时自定义） \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://blog-static.cnblogs.com/files/Tangent-1231/waifu.css\u0026#34;/\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://files.cnblogs.com/files/yjlblog/flat-ui.min.css\u0026#34;/\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://live2d-cdn.fghrsh.net/assets/1.4.2/waifu.min.css\u0026#34;/\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/gh/uggmycar/live2d@latest/assets/waifu.min.css\u0026#34;/\u0026gt; \u0026lt;!-- waifu-tips.js 依赖 JQuery 库--\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 实现拖动效果，需引入 JQuery UI --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.12.1/jquery-ui.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 人物材质--\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/uggmycar/live2d@2.0/assets/waifu-tips.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/uggmycar/live2d@latest/assets/live2d.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 人物加载位置--\u0026gt; \u0026lt;div class=\u0026#34;waifu\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;waifu-tips\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;canvas id=\u0026#34;live2d\u0026#34; class=\u0026#34;live2d\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;div class=\u0026#34;waifu-tool\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;fui-home\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;fui-chat\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;fui-eye\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;fui-user\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;fui-photo\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;!--下面是首页地址的代码--\u0026gt; \u0026lt;span class=\u0026#34;fui-info-circle\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;fui-cross\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- 看板娘属性设置--\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; /* 可直接修改部分参数 */ live2d_settings[\u0026#39;modelId\u0026#39;] = 2; // 默认模型 ID  live2d_settings[\u0026#39;modelTexturesId\u0026#39;] = 6; // 默认材质 ID  live2d_settings[\u0026#39;modelStorage\u0026#39;] = false; // 不储存模型 ID  live2d_settings[\u0026#39;canCloseLive2d\u0026#39;] = false; // 隐藏 关闭看板娘 按钮  live2d_settings[\u0026#39;canTurnToHomePage\u0026#39;] = false; // 隐藏 返回首页 按钮  live2d_settings[\u0026#39;waifuSize\u0026#39;] = \u0026#39;200x250\u0026#39;; // 看板娘大小  live2d_settings[\u0026#39;waifuTipsSize\u0026#39;] = \u0026#39;150x70\u0026#39;; // 提示框大小  live2d_settings[\u0026#39;waifuFontSize\u0026#39;] = \u0026#39;17px\u0026#39;; // 提示框字体  live2d_settings[\u0026#39;waifuToolFont\u0026#39;] = \u0026#39;19px\u0026#39;; // 工具栏字体  live2d_settings[\u0026#39;waifuToolLine\u0026#39;] = \u0026#39;20px\u0026#39;; // 工具栏行高  live2d_settings[\u0026#39;waifuToolTop\u0026#39;] = \u0026#39;-20px\u0026#39;; // 工具栏顶部边距  live2d_settings[\u0026#39;waifuDraggable\u0026#39;] = \u0026#39;unlimited\u0026#39;; // 拖拽样式  /* 在 initModel 前添加 */ // initModel(\u0026#34;https://cdn.jsdelivr.net/gh/uggmycar/live2d@latest/assets/waifu-tips.json\u0026#34;);//加载json默认对话模型  initModel( { \u0026#34;waifu\u0026#34;: { \u0026#34;console_open_msg\u0026#34;: [\u0026#34;打开了控制台，你是要窃取我的商业机密吗？\u0026#34;], \u0026#34;copy_message\u0026#34;: [\u0026#34;你都复制了些什么呀，转载要记得加上出处哦\u0026#34;], \u0026#34;screenshot_message\u0026#34;: [\u0026#34;照好了嘛，是不是很可爱呢？\u0026#34;], \u0026#34;hidden_message\u0026#34;: [\u0026#34;我们还能再见面的吧…\u0026#34;], \u0026#34;load_rand_textures\u0026#34;: [\u0026#34;我还没有其他衣服呢\u0026#34;, \u0026#34;我的新衣服好看嘛\u0026#34;], \u0026#34;hour_tips\u0026#34;: { \u0026#34;t5-7\u0026#34;: [\u0026#34;早上好！一日之计在于晨，美好的一天就要开始了\u0026#34;], \u0026#34;t7-11\u0026#34;: [\u0026#34;上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\u0026#34;], \u0026#34;t11-14\u0026#34;: [\u0026#34;中午了，工作了一个上午，现在是午餐时间！\u0026#34;], \u0026#34;t14-17\u0026#34;: [\u0026#34;午后很容易犯困呢，今天的运动目标完成了吗？\u0026#34;], \u0026#34;t17-19\u0026#34;: [\u0026#34;傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~\u0026#34;], \u0026#34;t19-21\u0026#34;: [\u0026#34;晚上好，今天过得怎么样？\u0026#34;], \u0026#34;t21-23\u0026#34;: [\u0026#34;已经这么晚了呀，早点休息吧，晚安~\u0026#34;], \u0026#34;t23-5\u0026#34;: [\u0026#34;你是夜猫子呀？这么晚还不睡觉，明天起的来嘛\u0026#34;], \u0026#34;default\u0026#34;: [\u0026#34;嗨~ 快来逗我玩吧！\u0026#34;] }, \u0026#34;referrer_message\u0026#34;: { \u0026#34;localhost\u0026#34;: [\u0026#34;欢迎阅读\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『\u0026#34;, \u0026#34;』\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34; - \u0026#34;], \u0026#34;baidu\u0026#34;: [\u0026#34;Hello! 来自 百度搜索 的朋友\u0026lt;br\u0026gt;你是搜索 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/span\u0026gt; 找到的我吗？\u0026#34;], \u0026#34;so\u0026#34;: [\u0026#34;Hello! 来自 360搜索 的朋友\u0026lt;br\u0026gt;你是搜索 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/span\u0026gt; 找到的我吗？\u0026#34;], \u0026#34;google\u0026#34;: [\u0026#34;Hello! 来自 谷歌搜索 的朋友\u0026lt;br\u0026gt;欢迎阅读\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『\u0026#34;, \u0026#34;』\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34; - \u0026#34;], \u0026#34;default\u0026#34;: [\u0026#34;Hello! 来自 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/span\u0026gt; 的朋友\u0026#34;], \u0026#34;none\u0026#34;: [\u0026#34;欢迎阅读\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『\u0026#34;, \u0026#34;』\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34; - \u0026#34;] }, \u0026#34;referrer_hostname\u0026#34;: { \u0026#34;example.com\u0026#34;: [\u0026#34;示例网站\u0026#34;], \u0026#34;www.fghrsh.net\u0026#34;: [\u0026#34;FGHRSH 的博客\u0026#34;] }, \u0026#34;model_message\u0026#34;: { \u0026#34;1\u0026#34;: [\u0026#34;来自 Potion Maker 的 Pio 酱 ~\u0026#34;], \u0026#34;2\u0026#34;: [\u0026#34;来自 Potion Maker 的 Tia 酱 ~\u0026#34;] }, \u0026#34;hitokoto_api_message\u0026#34;: { \u0026#34;lwl12.com\u0026#34;: [\u0026#34;这句一言来自 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『{source}』\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34;，是 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;{creator}\u0026lt;/span\u0026gt; 投稿的\u0026#34;, \u0026#34;。\u0026#34;], \u0026#34;fghrsh.net\u0026#34;: [\u0026#34;这句一言出处是 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『{source}』\u0026lt;/span\u0026gt;，是 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;FGHRSH\u0026lt;/span\u0026gt; 在 {date} 收藏的！\u0026#34;], \u0026#34;jinrishici.com\u0026#34;: [\u0026#34;这句诗词出自 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;《{title}》\u0026lt;/span\u0026gt;，是 {dynasty}诗人 {author} 创作的！\u0026#34;], \u0026#34;hitokoto.cn\u0026#34;: [\u0026#34;这句一言来自 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;『{source}』\u0026lt;/span\u0026gt;，是 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;{creator}\u0026lt;/span\u0026gt; 在 hitokoto.cn 投稿的。\u0026#34;] } }, \u0026#34;mouseover\u0026#34;: [ { \u0026#34;selector\u0026#34;: \u0026#34;.container a[href^=\u0026#39;http\u0026#39;]\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;要看看 \u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;{text}\u0026lt;/span\u0026gt; 么？\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-home\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;点击前往首页，想回到上一页可以使用浏览器的后退功能哦\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-chat\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;一言一语，一颦一笑。一字一句，一颗赛艇。\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-eye\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;嗯··· 要切换 看板娘 吗？\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-user\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;喜欢换装 Play 吗？\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-photo\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;要拍张纪念照片吗？\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-info-circle\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;这里有关于我的信息呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.fui-cross\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;你不喜欢我了吗...\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#tor_show\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;翻页比较麻烦吗，点击可以显示这篇文章的目录呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#comment_go\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;想要去评论些什么吗？\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#night_mode\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;深夜时要爱护眼睛呀\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#qrcode\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;手机扫一下就能继续看，很方便呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.comment_reply\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;要吐槽些什么呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#back-to-top\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;回到开始的地方吧\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#author\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;该怎么称呼你呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#mail\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;留下你的邮箱，不然就是无头像人士了\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#url\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;你的家在哪里呢，好让我去参观参观\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#textarea\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;认真填写哦，垃圾评论是禁止事项\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.OwO-logo\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;要插入一个表情吗\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;#csubmit\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;要[提交]^(Commit)了吗，首次评论需要审核，请耐心等待~\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.ImageBox\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;点击图片可以放大呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;input[name=s]\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;找不到想看的内容？搜索看看吧\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.previous\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;去上一页看看吧\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.next\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;去下一页看看吧\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.dropdown-toggle\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;这里是菜单\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;c-player a.play-icon\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;想要听点音乐吗\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;c-player div.time\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;在这里可以调整\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;播放进度\u0026lt;/span\u0026gt;呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;c-player div.volume\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;在这里可以调整\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;音量\u0026lt;/span\u0026gt;呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;c-player div.list-button\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;播放列表\u0026lt;/span\u0026gt;里都有什么呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;c-player div.lyric-button\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;有\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;歌词\u0026lt;/span\u0026gt;的话就能跟着一起唱呢\u0026#34;] }, { \u0026#34;selector\u0026#34;: \u0026#34;.waifu #live2d\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;干嘛呢你，快把手拿开\u0026#34;, \u0026#34;鼠…鼠标放错地方了！\u0026#34;] } ], \u0026#34;click\u0026#34;: [ { \u0026#34;selector\u0026#34;: \u0026#34;.waifu #live2d\u0026#34;, \u0026#34;text\u0026#34;: [ \u0026#34;是…是不小心碰到了吧\u0026#34;, \u0026#34;干嘛拉~\u0026#34;, \u0026#34;再摸的话我可要报警了！⌇●﹏●⌇\u0026#34;, \u0026#34;110吗，这里有个变态一直在摸我(ó﹏ò｡)\u0026#34; ] } ], \u0026#34;seasons\u0026#34;: [ { \u0026#34;date\u0026#34;: \u0026#34;01/01\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;元旦\u0026lt;/span\u0026gt;了呢，新的一年又开始了，今年是{year}年~\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;02/14\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;又是一年\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;情人节\u0026lt;/span\u0026gt;，{year}年找到对象了嘛~\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;03/08\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;今天是\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;妇女节\u0026lt;/span\u0026gt;！\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;03/12\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;今天是\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;植树节\u0026lt;/span\u0026gt;，要保护环境呀\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;04/01\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;悄悄告诉你一个秘密~\u0026lt;span style=\\\u0026#34;background-color:#34495e;\\\u0026#34;\u0026gt;今天是愚人节，不要被骗了哦~\u0026lt;/span\u0026gt;\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;05/01\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;今天是\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;五一劳动节\u0026lt;/span\u0026gt;，计划好假期去哪里了吗~\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;06/01\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;儿童节\u0026lt;/span\u0026gt;了呢，快活的时光总是短暂，要是永远长不大该多好啊…\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;09/03\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;中国人民抗日战争胜利纪念日\u0026lt;/span\u0026gt;，铭记历史、缅怀先烈、珍爱和平、开创未来。\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;09/10\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;教师节\u0026lt;/span\u0026gt;，在学校要给老师问声好呀~\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;10/01\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;国庆节\u0026lt;/span\u0026gt;，新中国已经成立69年了呢\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;11/05-11/12\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;今年的\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;双十一\u0026lt;/span\u0026gt;是和谁一起过的呢~\u0026#34;] }, { \u0026#34;date\u0026#34;: \u0026#34;12/20-12/31\u0026#34;, \u0026#34;text\u0026#34;: [\u0026#34;这几天是\u0026lt;span style=\\\u0026#34;color:#0099cc;\\\u0026#34;\u0026gt;圣诞节\u0026lt;/span\u0026gt;，主人肯定又去剁手买买买了~\u0026#34;] } ] }); \u0026lt;/script\u0026gt;    可自带修改的参数 // 后端接口 live2d_settings['modelAPI'] = 'live2d.fghrsh.net/api/'; // 自建 API 修改这里//live2d.fghrsh.net/api/（这是作者的）//cdn.jsdelivr.net/gh/uggmycar/live2d_api@latest/ live2d_settings['tipsMessage'] = 'waifu-tips.json'; // 同目录下可省略路径 live2d_settings['hitokotoAPI'] = 'lwl12.com'; // 一言 API，可选 'lwl12.com', 'hitokoto.cn', 'jinrishici.com'(古诗词) // 默认模型 live2d_settings['modelId'] = 1; // 默认模型 ID，可在 F12 控制台找到 live2d_settings['modelTexturesId'] = 53; // 默认材质 ID，可在 F12 控制台找到 // 工具栏设置 live2d_settings['showToolMenu'] = true; // 显示 工具栏 ，可选 true(真), false(假) live2d_settings['canCloseLive2d'] = true; // 显示 关闭看板娘 按钮，可选 true(真), false(假) live2d_settings['canSwitchModel'] = true; // 显示 模型切换 按钮，可选 true(真), false(假) live2d_settings['canSwitchTextures'] = true; // 显示 材质切换 按钮，可选 true(真), false(假) live2d_settings['canSwitchHitokoto'] = true; // 显示 一言切换 按钮，可选 true(真), false(假) live2d_settings['canTakeScreenshot'] = true; // 显示 看板娘截图 按钮，可选 true(真), false(假) live2d_settings['canTurnToHomePage'] = true; // 显示 返回首页 按钮，可选 true(真), false(假) live2d_settings['canTurnToAboutPage'] = true; // 显示 跳转关于页 按钮，可选 true(真), false(假) // 模型切换模式 live2d_settings['modelStorage'] = true; // 记录 ID (刷新后恢复)，可选 true(真), false(假) live2d_settings['modelRandMode'] = 'switch'; // 模型切换，可选 'rand'(随机), 'switch'(顺序) live2d_settings['modelTexturesRandMode']= 'rand'; // 材质切换，可选 'rand'(随机), 'switch'(顺序) // 提示消息选项 live2d_settings['showHitokoto'] = true; // 显示一言 live2d_settings['showF12Status'] = true; // 显示加载状态 live2d_settings['showF12Message'] = false; // 显示看板娘消息 live2d_settings['showF12OpenMsg'] = true; // 显示控制台打开提示 live2d_settings['showCopyMessage'] = true; // 显示 复制内容 提示 live2d_settings['showWelcomeMessage'] = true; // 显示进入面页欢迎词 //看板娘样式设置 live2d_settings['waifuSize'] = '280x250'; // 看板娘大小，例如 '280x250', '600x535' live2d_settings['waifuTipsSize'] = '250x70'; // 提示框大小，例如 '250x70', '570x150' live2d_settings['waifuFontSize'] = '12px'; // 提示框字体，例如 '12px', '30px' live2d_settings['waifuToolFont'] = '14px'; // 工具栏字体，例如 '14px', '36px' live2d_settings['waifuToolLine'] = '20px'; // 工具栏行高，例如 '20px', '36px' live2d_settings['waifuToolTop'] = '0px' // 工具栏顶部边距，例如 '0px', '-60px' live2d_settings['waifuMinWidth'] = '768px'; // 面页小于 指定宽度 隐藏看板娘，例如 'disable'(禁用), '768px' live2d_settings['waifuEdgeSide'] = 'left:0'; // 看板娘贴边方向，例如 'left:0'(靠左 0px), 'right:30'(靠右 30px) live2d_settings['waifuDraggable'] = 'unlimited'; // 拖拽样式，例如 'disable'(禁用), 'axis-x'(只能水平拖拽), 'unlimited'(自由拖拽) live2d_settings['waifuDraggableRevert'] = true; // 松开鼠标还原拖拽位置，可选 true(真), false(假) // 其他杂项设置 live2d_settings['l2dVersion'] = '1.4.2'; // 当前版本 live2d_settings['l2dVerDate'] = '2018.11.12'; // 版本更新日期 live2d_settings['homePageUrl'] = 'auto'; // 主页地址，可选 'auto'(自动), '{URL 网址}' live2d_settings['aboutPageUrl'] = 'https://www.fghrsh.net/post/123.html'; // 关于首页地址, '{URL 网址}' live2d_settings['screenshotCaptureName']= 'live2d.png'; // 看板娘截图文件名，例如 'live2d.png'   第二种看板娘 \u0026lt;!-- L2Dwidget.js L2D网页动画人物 --\u0026gt; \u0026lt;script src=\u0026#34;https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; L2Dwidget.init({ \u0026#34;model\u0026#34;: { \u0026#34;jsonPath\u0026#34;:\u0026#34; https://unpkg.com/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json\u0026#34;, \u0026#34;scale\u0026#34;: 2, \u0026#34;hHeadPos\u0026#34;:0.5, \u0026#34;vHeadPos\u0026#34;:0.9 }, \u0026#34;display\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;right\u0026#34;, \u0026#34;width\u0026#34;: 100, \u0026#34;height\u0026#34;: 250, \u0026#34;hOffset\u0026#34;: 0, \u0026#34;vOffset\u0026#34;: 0 }, \u0026#34;mobile\u0026#34;: { \u0026#34;show\u0026#34;: true, \u0026#34;scale\u0026#34;: 1}, \u0026#34;react\u0026#34;: { \u0026#34;opacityDefault\u0026#34;: 0.7, \u0026#34;opacityOnHover\u0026#34;: 0.2 } }); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;!-- 其他可选的模型： 小帅哥： https://unpkg.com/live2d-widget-model-chitose@1.0.5/assets/chitose.model.json  萌娘：https://unpkg.com/live2d-widget-model-shizuku@1.0.5/assets/shizuku.model.json  白猫：https://unpkg.com/live2d-widget-model-tororo@1.0.5/assets/tororo.model.json  黑猫： https://unpkg.com/live2d-widget-model-hijiki@1.0.5/assets/hijiki.model.json  小可爱（女）：https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json  小可爱（男）：https://unpkg.com/live2d-widget-model-haruto@1.0.5/assets/haruto.model.json  初音：https://unpkg.com/live2d-widget-model-miku@1.0.5/assets/miku.model.json  圣职者妹妹：https://unpkg.com/live2d-widget-model-z16@1.0.5/assets/z16.model.json  茶杯犬：https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json  绿毛妹妹：https://unpkg.com/live2d-widget-model-tsumiki@1.0.5/assets/tsumiki.model.json  金龟子妹妹：https://unpkg.com/live2d-widget-model-unitychan@1.0.5/assets/unitychan.model.json  https://unpkg.com/live2d-widget-model-nito@1.0.5/assets/nito.model.json  https://unpkg.com/live2d-widget-model-ni-j@1.0.5/assets/ni-j.model.json  小阿狸： https://unpkg.com/live2d-widget-model-nico@1.0.5/assets/nico.model.json  https://unpkg.com/live2d-widget-model-nietzche@1.0.5/assets/nietzche.model.json  https://unpkg.com/live2d-widget-model-nipsilon@1.0.5/assets/nipsilon.model.json  女学生： https://unpkg.com/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json  --\u0026gt; 参考博客 https://www.fghrsh.net/post/123.html\nhttps://github.com/stevenjoezhang/live2d-widget\nLive2D 官方网站:\nhttps://www.live2d.com/en/\nhttps://live2d.github.io\n页面优化\n var a_idx = 0; jQuery(document).ready(function($) { $(\"body\").click(function(e) { var a = new Array(\"❤哎嘿❤\",\"❤哦豁❤\",\"❤呀~❤\",\"❤嗯？❤\",\"❤点击❤\",\"❤芜湖❤\",\"❤滴❤\",\"❤别点啦❤\",\"❤没东西啦❤\",\"❤瞎点~❤\",\"❤我在哟❤\",\"❤好看不❤\"); var $i = $(\"\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 999999999999999999999999999999999999999999999999999999999999999999999, \"top\": y - 20, \"left\": x, \"position\": \"absolute\", \"font-weight\": \"bold\", \"color\": \"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\" }); $(\"body\").append($i); $i.animate({ \"top\": y - 180, \"opacity\": 0 }, 1500, function() { $i.remove(); }); }); });            /* 可直接修改部分参数 */ live2d_settings['modelId'] = 2; // 默认模型 IDlive2d_settings['modelTexturesId'] = 6; // 默认材质 ID live2d_settings['modelStorage'] = false; // 不储存模型 ID live2d_settings['canCloseLive2d'] = false; // 隐藏 关闭看板娘 按钮 live2d_settings['canTurnToHomePage'] = false; // 隐藏 返回首页 按钮 live2d_settings['waifuSize'] = '200x250'; // 看板娘大小 live2d_settings['waifuTipsSize'] = '150x70'; // 提示框大小 live2d_settings['waifuFontSize'] = '13px'; // 提示框字体 live2d_settings['waifuToolFont'] = '19px'; // 工具栏字体 live2d_settings['waifuToolLine'] = '20px'; // 工具栏行高 live2d_settings['waifuToolTop'] = '0px'; // 工具栏顶部边距 live2d_settings['waifuDraggable'] = 'unlimited'; // 拖拽样式 live2d_settings['waifuEdgeSide'] = 'right:30px'; // 看板娘贴边方向，例如 'left:0'(靠左 0px), 'right:30'(靠右 30px) /* 在 initModel 前添加 */  initModel( {\"waifu\": { \"console_open_msg\": [\"哈哈，你打开了控制台，是想要看看我的秘密吗？\"], \"copy_message\": [\"你都复制了些什么呀，转载要记得加上出处哦\"], \"screenshot_message\": [\"照好了嘛，是不是很可爱呢？\"], \"hidden_message\": [\"我们还能再见面的吧…\"], \"load_rand_textures\": [\"我还没有其他衣服呢\", \"我的新衣服好看嘛\"], \"hour_tips\": { \"t5-7\": [\"早上好！一日之计在于晨，美好的一天就要开始了\"], \"t7-11\": [\"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\"], \"t11-14\": [\"中午了，工作了一个上午，现在是午餐时间！\"], \"t14-17\": [\"午后很容易犯困呢，今天的运动目标完成了吗？\"], \"t17-19\": [\"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~\"], \"t19-21\": [\"晚上好，今天过得怎么样？\"], \"t21-23\": [\"已经这么晚了呀，早点休息吧，晚安~\"], \"t23-5\": [\"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛\"], \"default\": [\"嗨~ 快来逗我玩吧！\"]}, \"referrer_message\": { \"localhost\": [\"欢迎阅读『\", \"』\", \" - \"], \"baidu\": [\"Hello! 来自 百度搜索 的朋友\n你是搜索 \", \" 找到的我吗？\"], \"so\": [\"Hello! 来自 360搜索 的朋友\n你是搜索 \", \" 找到的我吗？\"], \"google\": [\"Hello! 来自 谷歌搜索 的朋友\n欢迎阅读『\", \"』\", \" - \"], \"default\": [\"Hello! 来自 \", \" 的朋友\"], \"none\": [\"欢迎阅读『\", \"』\", \" - \"] }, \"referrer_hostname\": { \"example.com\": [\"示例网站\"], \"www.fghrsh.net\": [\"FGHRSH 的博客\"] }, \"model_message\": { \"1\": [\"来自 Potion Maker 的 Pio 酱 ~\"], \"2\": [\"来自 Potion Maker 的 Tia 酱 ~\"] }, \"hitokoto_api_message\": { \"lwl12.com\": [\"这句一言来自 『{source}』\", \"，是 {creator} 投稿的\", \"。\"], \"fghrsh.net\": [\"这句一言出处是 『{source}』，是 FGHRSH 在 {date} 收藏的！\"], \"jinrishici.com\": [\"这句诗词出自 《{title}》，是 {dynasty}诗人 {author} 创作的！\"], \"hitokoto.cn\": [\"这句一言来自 『{source}』，是 {creator} 在 hitokoto.cn 投稿的。\"] } }, \"mouseover\": [ { \"selector\": \".container a[href^='http']\", \"text\": [\"要看看 {text} 么？\"] }, { \"selector\": \".fui-home\", \"text\": [\"点击前往首页，想回到上一页可以使用浏览器的后退功能哦\"] }, { \"selector\": \".fui-chat\", \"text\": [\"一言一语，一颦一笑。一字一句，一颗赛艇。\"] }, { \"selector\": \".fui-eye\", \"text\": [\"嗯··· 要切换 看板娘 吗？\"] }, { \"selector\": \".fui-user\", \"text\": [\"喜欢换装 Play 吗？\"] }, { \"selector\": \".fui-photo\", \"text\": [\"要拍张纪念照片吗？\"] }, { \"selector\": \".fui-info-circle\", \"text\": [\"这里有关于我的信息呢\"] }, { \"selector\": \".fui-cross\", \"text\": [\"你不喜欢我了吗...\"] }, { \"selector\": \"#tor_show\", \"text\": [\"翻页比较麻烦吗，点击可以显示这篇文章的目录呢\"] }, { \"selector\": \"#comment_go\", \"text\": [\"想要去评论些什么吗？\"] }, { \"selector\": \"#night_mode\", \"text\": [\"深夜时要爱护眼睛呀\"] }, { \"selector\": \"#qrcode\", \"text\": [\"手机扫一下就能继续看，很方便呢\"] }, { \"selector\": \".comment_reply\", \"text\": [\"要吐槽些什么呢\"] }, { \"selector\": \"#back-to-top\", \"text\": [\"回到开始的地方吧\"] }, { \"selector\": \"#author\", \"text\": [\"该怎么称呼你呢\"] }, { \"selector\": \"#mail\", \"text\": [\"留下你的邮箱，不然就是无头像人士了\"] }, { \"selector\": \"#url\", \"text\": [\"你的家在哪里呢，好让我去参观参观\"] }, { \"selector\": \"#textarea\", \"text\": [\"认真填写哦，垃圾评论是禁止事项\"] }, { \"selector\": \".OwO-logo\", \"text\": [\"要插入一个表情吗\"] }, { \"selector\": \"#csubmit\", \"text\": [\"要[提交]^(Commit)了吗，首次评论需要审核，请耐心等待~\"] }, { \"selector\": \".ImageBox\", \"text\": [\"点击图片可以放大呢\"] }, { \"selector\": \"input[name=s]\", \"text\": [\"找不到想看的内容？搜索看看吧\"] }, { \"selector\": \".previous\", \"text\": [\"去上一页看看吧\"] }, { \"selector\": \".next\", \"text\": [\"去下一页看看吧\"] }, { \"selector\": \".dropdown-toggle\", \"text\": [\"这里是菜单\"] }, { \"selector\": \"c-player a.play-icon\", \"text\": [\"想要听点音乐吗\"] }, { \"selector\": \"c-player div.time\", \"text\": [\"在这里可以调整播放进度呢\"] }, { \"selector\": \"c-player div.volume\", \"text\": [\"在这里可以调整音量呢\"] }, { \"selector\": \"c-player div.list-button\", \"text\": [\"播放列表里都有什么呢\"] }, { \"selector\": \"c-player div.lyric-button\", \"text\": [\"有歌词的话就能跟着一起唱呢\"] }, { \"selector\": \".waifu #live2d\", \"text\": [\"干嘛呢你，快把手拿开\", \"鼠…鼠标放错地方了！\"] }], \"click\": [{ \"selector\": \".waifu #live2d\", \"text\": [ \"是…是不小心碰到了吧\", \"干嘛拉~\", \"再摸的话我可要报警了！⌇●﹏●⌇\", \"110吗，这里有个变态一直在摸我(ó﹏ò｡)\"]}], \"seasons\": [ { \"date\": \"01/01\", \"text\": [\"元旦了呢，新的一年又开始了，今年是{year}年~\"] }, { \"date\": \"02/14\", \"text\": [\"又是一年情人节，{year}年找到对象了嘛~\"] }, { \"date\": \"03/08\", \"text\": [\"今天是妇女节！\"] }, { \"date\": \"03/12\", \"text\": [\"今天是植树节，要保护环境呀\"] }, { \"date\": \"04/01\", \"text\": [\"悄悄告诉你一个秘密~今天是愚人节，不要被骗了哦~\"] }, { \"date\": \"05/01\", \"text\": [\"今天是五一劳动节，计划好假期去哪里了吗~\"] }, { \"date\": \"06/01\", \"text\": [\"儿童节了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"] }, { \"date\": \"09/03\", \"text\": [\"中国人民抗日战争胜利纪念日，铭记历史、缅怀先烈、珍爱和平、开创未来。\"] }, { \"date\": \"09/10\", \"text\": [\"教师节，在学校要给老师问声好呀~\"] }, { \"date\": \"10/01\", \"text\": [\"国庆节，新中国已经成立69年了呢\"] }, { \"date\": \"11/05-11/12\", \"text\": [\"今年的双十一是和谁一起过的呢~\"] }, { \"date\": \"12/20-12/31\", \"text\": [\"这几天是圣诞节，主人肯定又去剁手买买买了~\"] } ]});  ","date":"2021-08-09T19:47:50+08:00","image":"https://uggmycar.github.io/p/%E7%9C%8B%E6%9D%BF%E5%A8%98/b_hu57c4a40d8f0fd95e9da6bba35bfb835e_1096105_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/%E7%9C%8B%E6%9D%BF%E5%A8%98/","title":"看板娘"},{"content":"git流程 git开发 1.在本地创建本地仓库\n2.创建远程仓库\n3.将开发人加入团队\ngit命令效果    代码 用法     clone 将代码下到本地仓库   push 将代码从本地分支放到远程分支（创建远程分支）   pull 将本地分支与远程仓库某分支合并   checkout 切换分支或者创建分支（保存在本地仓库里）   add 将本地代码放到暂存区   commit 将暂存区代码放到对应分支里保存     git流程图 \n分支解释 各个分支就是各个文件（保存其本地文件的文件）\n分支放在本地仓库\n 分支图 \ngif文件存在状态  本地仓库与工作区文件变换图 \n简单点说 本地文件先add在commit后会到仓库里\n文件被编辑后会变为modified状态，需要在add与commit才能将编辑后的文件放到仓库里\ngit命令  git命令（部分） \n   代码 用法     git init 第一次要在这个文件夹下初始化gitgit   git add . 提交所有文件   git status 查看提交状态   git commit -m \u0026ldquo;我的hugo博客第一次提交\u0026rdquo; 提示内容   git clone 地址.git 克隆地址下的代码   git remote add origin 地址.git 给远程地址起别名，这里叫origin（以下origin都是其的别名）   git remote 查看自己设置的地址有哪些   git config \u0026ndash;global \u0026ndash;unset http.proxy 绿色上网后要关代理在试   git push -u origin master 输入自己账号密码，提交(第一次要)因为win10会自动记住你的密码，可以自己删除   git push origin master 之后可这样   git config core.ignorecase false 不忽略文件大小写（上传时）   git diff 查看变更状态（工作区的）   git diff \u0026ndash;staged 看缓冲区的状态   git checkout -b 创建的分支名字 创建并切换到那个分支   git branch 查看当 前分支   git checkout 其它分支名字 切换到其它分支   git branch -m dev 重命名的名字 改名字   git branch -D 分支名字 删除分支   git merge 分支名（该分支为已经开发完的） 合并分支（先切换到要被改动的分支上）   git pull origin 分支名（该分支为已经开发完的） 远程仓库合并分支   git push origin 本地分支名:远程分支名 创建远程分支   git push origin \u0026ndash;delete 删除分支名字 删除分支名字   git origin 远程地址 1把远程仓库下载到本地2.创建origin远程地址别名3.初始化本地库    git使用需要注意的 分支合并  合并时产生冲突会有MERGING警告这时要改对应的文件（文件里head是当前文件内容）再重新add与提交（git commit不带文件名）\n远程合并冲突要先pull然后是和上面\n 加入团队  别的人（账号）要动我们仓库要在git（或者其它）里设置加入团队，git的是在Settings的Collaborators里加,另一个人接收\n别人的远程仓库复制我们的远程仓库（这种操作叫fork）\n  给git设置自己账号密码 \n\u0026lt;!-- waifu-tips.js 依赖 JQuery 库--\u0026gt;   \u0026lt;!-- 实现拖动效果，需引入 JQuery UI --\u0026gt;    ","date":"2021-08-03T08:33:30+08:00","image":"https://uggmycar.github.io/p/git%E5%AD%A6%E4%B9%A0/a_hu5d60d96d43a3d866a19112ce76e5ac43_21031_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/git%E5%AD%A6%E4%B9%A0/","title":"Git学习"},{"content":"安装hugo 用hugo version 看安装是否成功\n用hugo建博客 访问这个网址下载对应喜欢的主题\nhugo new site （站点名） \u0026ndash;创建博客站点（初始化博客目录 ）\ngit clone （themes资源） \u0026ndash;将资源放到站点内（注意要在站点根目录下用）\nhugo new post/（博客名.md）\u0026ndash;创建自己的博客（注意draft: true要去掉）  吐槽：我用的博客，博客名必须叫index.md且放不同文件夹下，不然图片访问不到。。。 \n预览自己博客 hugo server\t\u0026ndash;访问127.0.0.1:1313端口预览\n#发布自己博客 hugo \u0026ndash;baseUrl=\u0026ldquo;仓库地址\u0026rdquo; \u0026ndash;buildDrafts\t\u0026ndash;会生成public文件夹，同时站点监听域名（buildDrafts表示包括被标记为draft的文章；）\nhugo\t\u0026ndash;生成并更新public（之后可这样）\ncd public\t\u0026ndash;进入public\ngit init\t\u0026ndash;第一次要在这个文件夹下初始化git\ngit add .\t\u0026ndash;提交所有文件到暂存区\ngit status\t\u0026ndash;可看提交的内容是否成功\ngit commit -m \u0026ldquo;我的hugo博客第一次提交\u0026rdquo;\t\u0026ndash;提示内容且放到本地仓库\n注意创建时要/自己github号.github.io\ngit remote add origin https://github.com/（自己git号）/(仓库地址).git\t\u0026ndash;第一次要将本地仓库与远程仓库建立联系\n这里出错了可以先 git remote rm origin\t\u0026ndash;之前有建可删除在重新绑定发布地址\ngit push -u origin master\t\u0026ndash;输入自己账号密码，提交(第一次要)\ngit push origin master \u0026ndash;之后可这样\ngit config \u0026ndash;global \u0026ndash;unset http.proxy\t\u0026ndash;绿色上网后要关代理在试\n Title   L2Dwidget.init({ \"model\": { \"jsonPath\":\" https://unpkg.com/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json\", \"scale\": 2, \"hHeadPos\":0.5, \"vHeadPos\":0.9 }, \"display\": { \"position\": \"right\", \"width\": 100, \"height\": 250, \"hOffset\": 0, \"vOffset\": 0 }, \"mobile\": { \"show\": true, \"scale\": 1}, \"react\": { \"opacityDefault\": 0.7, \"opacityOnHover\": 0.2 } });   ","date":"2021-08-01T00:00:00Z","image":"https://uggmycar.github.io/p/%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/aa_hu889abf96da10f391db259d3bb48eeec9_219431_120x120_fill_q75_box_smart1.jpg","permalink":"https://uggmycar.github.io/p/%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/","title":"建博客教程"}]